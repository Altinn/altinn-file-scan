name: Use Case - AT

on:
  schedule:
  - cron: '*/10 * * * *'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  AT21:
    environment: AT21
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/end2end.js -e subskey=${{ secrets.APIM_SUBSKEY }} -e env=${{ vars.ENV }} -e org=${{ vars.ORG }}  -e app=${{ vars.APP }} -e userId=${{ secrets.USER_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e partyId=${{ secrets.PARTY_ID }}

  AT22:
    environment: AT22
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/end2end.js -e subskey=${{ secrets.APIM_SUBSKEY }} -e env=${{ vars.ENV }} -e org=${{ vars.ORG }}  -e app=${{ vars.APP }} -e userId=${{ secrets.USER_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e partyId=${{ secrets.PARTY_ID }}

  AT23:
    environment: AT23
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/end2end.js -e subskey=${{ secrets.APIM_SUBSKEY }} -e env=${{ vars.ENV }} -e org=${{ vars.ORG }}  -e app=${{ vars.APP }} -e userId=${{ secrets.USER_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e partyId=${{ secrets.PARTY_ID }}

  AT24:
    environment: AT24
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/end2end.js -e subskey=${{ secrets.APIM_SUBSKEY }} -e env=${{ vars.ENV }} -e org=${{ vars.ORG }}  -e app=${{ vars.APP }} -e userId=${{ secrets.USER_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e partyId=${{ secrets.PARTY_ID }}

  report-status:
    name: Report status
    runs-on: ubuntu-latest
    needs: [AT21, AT22, AT23, AT24]
    #if: always() && contains(join(needs.*.result, ','), 'failure')
    steps:
      - name: Build failure report
        run: |
          $report = "## Use case test failure in AT! :party_parrot: \n See environment listed below: \n"

          if [ !  ${{ needs.AT21.result}}]
          then
          $report += "AT21 \r\n"
          fi

          echo $report >> $GITHUB_STEP_SUMMARY

      - name: Report failute to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
              {
                "text": ${{ GITHUB_STEP_SUMMARY }}"
              }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_TEST }}
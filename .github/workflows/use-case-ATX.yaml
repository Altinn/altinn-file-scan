name: Use Case - AT

on:
  schedule:
  - cron: '*/10 * * * *'
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]

jobs:
  AT21:
    environment: AT21
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/end2end.js -e subskey=${{ secrets.APIM_SUBSKEY }} -e env=${{ vars.ENV }} -e org=${{ vars.ORG }}  -e app=${{ vars.APP }} -e userId=${{ secrets.USER_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e partyId=${{ secrets.PARTY_ID }}

  AT22:
    environment: AT22
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/end2end.js -e subskey=${{ secrets.APIM_SUBSKEY }} -e env=${{ vars.ENV }} -e org=${{ vars.ORG }}  -e app=${{ vars.APP }} -e userId=${{ secrets.USER_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e partyId=${{ secrets.PARTY_ID }}

  AT23:
    environment: AT23
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/end2end.js -e subskey=${{ secrets.APIM_SUBSKEY }} -e env=${{ vars.ENV }} -e org=${{ vars.ORG }}  -e app=${{ vars.APP }} -e userId=${{ secrets.USER_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e partyId=${{ secrets.PARTY_ID }}

  AT24:
    environment: AT24
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run use case tests
      run:  |
              cd test/k6
              docker-compose run k6 run /src/tests/end2end.js -e subskey=${{ secrets.APIM_SUBSKEY }} -e env=${{ vars.ENV }} -e org=${{ vars.ORG }}  -e app=${{ vars.APP }} -e userId=${{ secrets.USER_ID }} -e personNumber=${{ secrets.PERSON_NUMBER }} -e tokenGeneratorUserName=${{ secrets.TOKENGENERATOR_USERNAME }} -e tokenGeneratorUserPwd=${{ secrets.TOKENGENERATOR_USERPASSWORD }} -e partyId=${{ secrets.PARTY_ID }}

  report-status:
    name: Report status
    runs-on: ubuntu-latest
    needs: [AT21, AT22, AT23, AT24]
    if: always() && contains(join(needs.*.result, ','), 'failure')
    steps:
      - name: Show the values of the outputs
        run: |
          echo "Use case test status"
          echo "AT21:" ${{ needs.AT21.result}}
          echo "AT22:" ${{ needs.AT22.result}}
          echo "AT23:" ${{ needs.AT23.result}}
          echo "AT24:" ${{ needs.AT24.result}}
      - name: Report failute to Slack
        if: false
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            [
            {
              "environment": "AT21",
              "test result": "${{ needs.AT21.result}}"
            },
               {
              "environment": "AT22",
              "test result": "${{ needs.AT22.result}}"
            },
               {
              "environment": "AT23",
              "test result": "${{ needs.AT23.result}}"
            },
               {
              "environment": "AT24",
              "test result": "${{ needs.AT24.result}}"
            },
            ]
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}